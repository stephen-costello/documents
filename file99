<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>HubSpot Style Tiles</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: #f5f8fa;
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
        }

        .container {
            display: flex;
            gap: 16px;
            align-items: stretch;
        }

        .tile {
            background: white;
            border-radius: 8px;
            padding: 20px;
            width: 180px;
            cursor: pointer;
            transition: all 0.2s ease;
            border: 1px solid #e1e8ed;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.08);
            position: relative;
            overflow: hidden;
            animation: slideUp 0.4s ease-out;
            text-align: center;
        }

        .tile:nth-child(1) { animation-delay: 0.1s; }
        .tile:nth-child(2) { animation-delay: 0.2s; }

        @keyframes slideUp {
            0% {
                opacity: 0;
                transform: translateY(20px);
            }
            100% {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .tile:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.12);
            border-color: var(--tile-color);
        }

        .tile:active {
            transform: translateY(0);
            transition: all 0.1s ease;
        }

        .contact-tile {
            --tile-color: #ff7a59;
        }

        .miro-tile {
            --tile-color: #0091ae;
        }

        .tile-icon {
            width: 40px;
            height: 40px;
            border-radius: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 12px auto;
            font-size: 18px;
        }

        .contact-tile .tile-icon {
            background: linear-gradient(135deg, #ff7a59, #ff9472);
            color: white;
        }

        .miro-tile .tile-icon {
            background: linear-gradient(135deg, #0091ae, #00a4bd);
            color: white;
        }

        .tile h3 {
            font-size: 14px;
            margin-bottom: 6px;
            color: #33475b;
            font-weight: 600;
            line-height: 1.3;
        }

        .tile p {
            color: #7c98b6;
            font-size: 12px;
            line-height: 1.4;
            margin-bottom: 14px;
        }

        .tile-button {
            background: var(--tile-color);
            color: white;
            padding: 6px 12px;
            border: none;
            border-radius: 4px;
            font-size: 11px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.2s ease;
            text-decoration: none;
            display: inline-block;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .tile-button:hover {
            transform: translateY(-1px);
            opacity: 0.9;
        }

        .status-indicator {
            position: absolute;
            top: 8px;
            right: 8px;
            width: 8px;
            height: 8px;
            border-radius: 50%;
            background: #00a4bd;
        }

        .contact-tile .status-indicator {
            background: #ff7a59;
        }

        .miro-tile .status-indicator {
            background: #0091ae;
        }

        /* Ripple effect */
        .ripple {
            position: absolute;
            border-radius: 50%;
            background: rgba(255, 255, 255, 0.6);
            transform: scale(0);
            animation: ripple-animation 0.6s linear;
            pointer-events: none;
        }

        @keyframes ripple-animation {
            to {
                transform: scale(4);
                opacity: 0;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <!-- 1. Contact ELT Tile -->
        <div class="tile contact-tile" onclick="contactELT(event)">
            <div class="status-indicator"></div>
            <div class="tile-icon">ðŸ“§</div>
            <h3>Contact ELT</h3>
            <p>Reach leadership team</p>
            <div class="tile-button">Email</div>
        </div>

        <!-- 2. Miro Documentation Tile -->
        <div class="tile miro-tile" onclick="openMiro(event)">
            <div class="status-indicator"></div>
            <div class="tile-icon">ðŸ“‹</div>
            <h3>Follow Our Miro</h3>
            <p>Official documentation</p>
            <div class="tile-button">View Docs</div>
        </div>
    </div>

    <script>
        function contactELT(e) {
            createRipple(e);
            setTimeout(() => {
                window.location.href = 'mailto:costello.stephen@gmail.com';
            }, 150);
        }

        function openMiro(e) {
            createRipple(e);
            setTimeout(() => {
                window.open('https://miro.com/app/board/', '_blank');
            }, 150);
        }

        function createRipple(e) {
            const tile = e.currentTarget;
            const ripple = document.createElement('div');
            const rect = tile.getBoundingClientRect();
            const size = Math.max(rect.width, rect.height);
            const x = e.clientX - rect.left - size / 2;
            const y = e.clientY - rect.top - size / 2;
            
            ripple.className = 'ripple';
            ripple.style.width = ripple.style.height = size + 'px';
            ripple.style.left = x + 'px';
            ripple.style.top = y + 'px';
            
            tile.appendChild(ripple);
            
            setTimeout(() => {
                ripple.remove();
            }, 600);
        }

        // Animate status indicators
        document.addEventListener('DOMContentLoaded', function() {
            const indicators = document.querySelectorAll('.status-indicator');
            indicators.forEach((indicator, index) => {
                setTimeout(() => {
                    indicator.style.animation = 'pulse 2s infinite';
                }, index * 200);
            });
        });

        // Add pulse animation
        const style = document.createElement('style');
        style.textContent = `
            @keyframes pulse {
                0%, 100% { 
                    opacity: 1; 
                    transform: scale(1); 
                }
                50% { 
                    opacity: 0.7; 
                    transform: scale(1.1); 
                }
            }
        `;
        document.head.appendChild(style);
    </script>
</body>
</html>
